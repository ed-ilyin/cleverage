module Cleverage.Client.Table
open Bolero.Html

type –°–∏–º–≤–æ–ª = string
type –ò–º—è = string
type –†–æ–ª—å = –°–ø–∞—Å–∏—Ç–µ–ª—å | –ú–∞—Å–æ–Ω | –†–µ–ø—Ç–∏–ª–æ–∏–¥ | –î–µ–º–æ–Ω

type –ò–≥—Ä–æ–∫ = {
    –°–∏–º–≤–æ–ª: –°–∏–º–≤–æ–ª
    –ò–º—è: –ò–º—è
    –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: int
    –°–ø–∞—Å–∏—Ç–µ–ª—å: float
    –ú–∞—Å–æ–Ω: float
    –†–µ–ø—Ç–∏–ª–æ–∏–¥: float
    –î–µ–º–æ–Ω: float
    –†–∞–±: bool
}

type –ú–æ–¥–µ–ª—å = Map<–°–∏–º–≤–æ–ª, –ò–≥—Ä–æ–∫>

type –î–µ–π—Å—Ç–≤–∏–µ =
    | –ó–µ–≤–Ω—É–ª
    | –ü—Ä–æ–±–∞—Å–∏–ª
    | –ü–æ–¥–æ–∑—Ä–µ–≤–∞–µ—Ç of –°–∏–º–≤–æ–ª
    | –ü–æ–ª—É—á–∏–ª–ö–ª—é—á–ù–µ of –†–æ–ª—å * –°–∏–º–≤–æ–ª
    | –ü—Ä–æ—Ä–æ—á–∏—Ç of
        —Å–ø–∞—Å–∏—Ç–µ–ª—å: –°–∏–º–≤–æ–ª * —Ä–µ–ø—Ç–∏–ª—å1: –°–∏–º–≤–æ–ª * —Ä–µ–ø—Ç–∏–ª—å2: –°–∏–º–≤–æ–ª * –¥–µ–º–æ–Ω: –°–∏–º–≤–æ–ª
    | –ì–æ–ª–æ—Å—É–µ—Ç–ü—Ä–æ—Ç–∏–≤ of –°–∏–º–≤–æ–ª
    | –ó–∞—Å–Ω—É–ª
    | –ü–æ—â–∞–¥–∏–ª of –°–∏–º–≤–æ–ª
    | –ü–æ—Ä–∞–±–æ—â—ë–Ω–ù–µ of –†–æ–ª—å
    | –ü–æ—Å—Ç–∞–≤–∏–ª–ù–∞ of –°–∏–º–≤–æ–ª
    | –ü–æ—Ä–∞–±–æ—â—ë–Ω–î–µ–º–æ–Ω–æ–º–ù–µ of –†–æ–ª—å * –†–æ–ª—å

let –∏–≥—Ä–∞ = "MistyRose Union"

let –∏–≥—Ä–æ–∫–∏ =
    [   "üçå", "–ö–æ–º–∞–Ω–¥–æ—Ä"
        "üë£", "–ú–∞—Ä–∫–∏–∑–∞"
        "üßô", "–ö–∞—Ä–∞–±–∞—Å"
        "ü¶ñ", "–ë—É—Ä–∞—Ç–∏–Ω–æ"
        "‚öß", "–ü—Ä–∏—à–µ–ª–µ—Ü"
        "üçë", "–ì—Ä–µ—à–Ω–∏—Ü–∞"
        "‚ôü", "–ñ–º—ã—Ö"
        "üêô", "–ö—Ä–∞–∫–µ–Ω"
        "üåà", "–ú–∞–ª—å–≤–∏–Ω–∞"
        "ü§¨", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫"
    ] |> Map.ofList

let —Å–æ–±—ã—Ç–∏—è = [

    ]

let –Ω–æ–≤—ã–π–ò–≥—Ä–æ–∫ —Å–∏–º–≤–æ–ª –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = {
        –°–∏–º–≤–æ–ª = —Å–∏–º–≤–æ–ª
        –ò–º—è = Map.tryFind —Å–∏–º–≤–æ–ª –∏–≥—Ä–æ–∫–∏ |> Option.defaultValue ""
        –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        –°–ø–∞—Å–∏—Ç–µ–ª—å = 0.1
        –ú–∞—Å–æ–Ω = 0.6
        –†–µ–ø—Ç–∏–ª–æ–∏–¥ = 0.2
        –î–µ–º–æ–Ω = 0.1
        –†–∞–± = false
    }

let –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–µ–π –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ =
    Map.add –æ–Ω (
        match Map.tryFind –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ with
        | None -> –Ω–æ–≤—ã–π–ò–≥—Ä–æ–∫ –æ–Ω 1
        | Some –∏–≥—Ä–æ–∫ ->
            { –∏–≥—Ä–æ–∫ with –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = –∏–≥—Ä–æ–∫.–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å + 1 }
    ) —Å–æ—Å—Ç–æ—è–Ω–∏–µ

let –º–µ–Ω–µ–µ–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ =
    Map.add –æ–Ω (
        match Map.tryFind –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ with
        | None -> –Ω–æ–≤—ã–π–ò–≥—Ä–æ–∫ –æ–Ω -1
        | Some –∏–≥—Ä–æ–∫ ->
            { –∏–≥—Ä–æ–∫ with –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = –∏–≥—Ä–æ–∫.–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - 1 }
    ) —Å–æ—Å—Ç–æ—è–Ω–∏–µ

let –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–û—Ç–ì–∫–î –∞ –± –≤ –≥ –¥ = –¥ + –≥ / (–∞ + –± + –≤) * –¥

let –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–ö _ _ _ –º–æ–¥–µ–ª—å –∏–≥—Ä–æ–∫ = Map.add –∏–≥—Ä–æ–∫.–°–∏–º–≤–æ–ª –∏–≥—Ä–æ–∫ –º–æ–¥–µ–ª—å

let –∫–ª—é—á–ù–µ –Ω–µ–†–æ–ª—å –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ =
    let –∏–≥—Ä–æ–∫ =
        Map.tryFind –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ |> Option.defaultValue (–Ω–æ–≤—ã–π–ò–≥—Ä–æ–∫ –æ–Ω 0)
    match –Ω–µ–†–æ–ª—å with
    | –°–ø–∞—Å–∏—Ç–µ–ª—å ->
        let –¥ =
            –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–û—Ç–ì–∫–î –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥ –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
                –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å
        { –∏–≥—Ä–æ–∫ with
            –°–ø–∞—Å–∏—Ç–µ–ª—å = 0.
            –ú–∞—Å–æ–Ω = –¥ –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω
            –†–µ–ø—Ç–∏–ª–æ–∏–¥ = –¥ –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥
            –î–µ–º–æ–Ω = –¥ –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
        } |> –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–ö –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å (fun –∏ -> –∏.–°–ø–∞—Å–∏—Ç–µ–ª—å)
            (fun –∏ —Å -> { –∏ with –°–ø–∞—Å–∏—Ç–µ–ª—å = —Å }) —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    | –ú–∞—Å–æ–Ω ->
        let –¥ =
            –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–û—Ç–ì–∫–î –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥ –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
                –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω
        { –∏–≥—Ä–æ–∫ with
            –°–ø–∞—Å–∏—Ç–µ–ª—å = –¥ –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å
            –ú–∞—Å–æ–Ω = 0.
            –†–µ–ø—Ç–∏–ª–æ–∏–¥ = –¥ –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥
            –î–µ–º–æ–Ω = –¥ –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
        } |> –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–ö –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω (fun –∏ -> –∏.–ú–∞—Å–æ–Ω)
            (fun –∏ –º -> { –∏ with –ú–∞—Å–æ–Ω = –º }) —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    | –†–µ–ø—Ç–∏–ª–æ–∏–¥ ->
        let –¥ =
            –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–û—Ç–ì–∫–î –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
                –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥
        { –∏–≥—Ä–æ–∫ with
            –°–ø–∞—Å–∏—Ç–µ–ª—å = –¥ –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å
            –ú–∞—Å–æ–Ω = –¥ –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω
            –†–µ–ø—Ç–∏–ª–æ–∏–¥ = 0.
            –î–µ–º–æ–Ω = –¥ –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
        } |> –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–ö –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω (fun –∏ -> –∏.–ú–∞—Å–æ–Ω)
            (fun –∏ –º -> { –∏ with –ú–∞—Å–æ–Ω = –º }) —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    | –î–µ–º–æ–Ω ->
        let –¥ =
            –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–û—Ç–ì–∫–î –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥
                –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
        { –∏–≥—Ä–æ–∫ with
            –°–ø–∞—Å–∏—Ç–µ–ª—å = –¥ –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å
            –ú–∞—Å–æ–Ω = –¥ –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω
            –†–µ–ø—Ç–∏–ª–æ–∏–¥ = –¥ –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥
            –î–µ–º–æ–Ω = 0.
        } |> –¥–æ–±–∞–≤—å–ü—Ä–æ—Ü–µ–Ω—Ç—ã–ö –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω (fun –∏ -> –∏.–ú–∞—Å–æ–Ω)
            (fun –∏ –º -> { –∏ with –ú–∞—Å–æ–Ω = –º }) —Å–æ—Å—Ç–æ—è–Ω–∏–µ

let —Ä–∞–± —Å–∏–º–≤–æ–ª –º–æ–¥–µ–ª—å =
    match Map.tryFind —Å–∏–º–≤–æ–ª –º–æ–¥–µ–ª—å with
    | None -> –º–æ–¥–µ–ª—å
    | Some –∏–≥—Ä–æ–∫ -> Map.add —Å–∏–º–≤–æ–ª { –∏–≥—Ä–æ–∫ with –†–∞–± = true } –º–æ–¥–µ–ª—å

let —Ä–∞—Å–∫–æ–ª–±–∞—Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ = function
    | –æ–Ω, –ó–µ–≤–Ω—É–ª | –æ–Ω, –ü—Ä–æ–±–∞—Å–∏–ª -> –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–µ–π –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    | _, –ü–æ–¥–æ–∑—Ä–µ–≤–∞–µ—Ç –µ–≥–æ  -> –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–µ–π –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    | –æ–Ω, –ü–æ–ª—É—á–∏–ª–ö–ª—é—á–ù–µ (—Ä–æ–ª—å, –∫—Ç–æ) ->
        –∫–ª—é—á–ù–µ —Ä–æ–ª—å –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ |> –∫–ª—é—á–ù–µ —Ä–æ–ª—å –∫—Ç–æ
    | –æ–Ω, –ü—Ä–æ—Ä–æ—á–∏—Ç (—Å–ø–∞—Å–∏—Ç–µ–ª—å, —Ä–µ–ø—Ç–∏–ª—å1, —Ä–µ–ø—Ç–∏–ª—å2, –¥–µ–º–æ–Ω) ->
        –º–µ–Ω–µ–µ–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–∞—Å–∏—Ç–µ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        |> –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–µ–π —Ä–µ–ø—Ç–∏–ª—å1
        |> –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–µ–π —Ä–µ–ø—Ç–∏–ª—å2
        |> –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–µ–π –¥–µ–º–æ–Ω
    | –æ–Ω, –ì–æ–ª–æ—Å—É–µ—Ç–ü—Ä–æ—Ç–∏–≤ –Ω–µ–≥–æ -> –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–µ–π –Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    | –æ–Ω, –ü–æ—â–∞–¥–∏–ª –µ–≥–æ -> –º–µ–Ω–µ–µ–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    | –æ–Ω, –ü–æ—Ä–∞–±–æ—â—ë–Ω–ù–µ —Ä–æ–ª—å -> –∫–ª—é—á–ù–µ —Ä–æ–ª—å –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ |> —Ä–∞–± –æ–Ω
    | –æ–Ω, –ü–æ—Ä–∞–±–æ—â—ë–Ω–î–µ–º–æ–Ω–æ–º–ù–µ (—Ä–æ–ª—å1, —Ä–æ–ª—å2) ->
        –∫–ª—é—á–ù–µ —Ä–æ–ª—å1 –æ–Ω —Å–æ—Å—Ç–æ—è–Ω–∏–µ |> –∫–ª—é—á–ù–µ —Ä–æ–ª—å2 –æ–Ω |> —Ä–∞–± –æ–Ω
    | _ -> —Å–æ—Å—Ç–æ—è–Ω–∏–µ

let —Ä–µ–π—Ç–∏–Ω–≥ =
    List.fold —Ä–∞—Å–∫–æ–ª–±–∞—Å (Map.map (fun —Å–∏–º–≤–æ–ª _ -> –Ω–æ–≤—ã–π–ò–≥—Ä–æ–∫ —Å–∏–º–≤–æ–ª 0) –∏–≥—Ä–æ–∫–∏)
        —Å–æ–±—ã—Ç–∏—è
    |> Map.toList
    |> List.map snd

// VIEW

let –∫–ª—é—á–∏–í–Ø—á–µ–π–∫—É –∫–ª—é—á–∏ =
    match Set.toList –∫–ª—é—á–∏ |> List.map (sprintf "–ù–µ-%A") with
    | [] -> ""
    | –∫–ª—é—á–∏ -> List.reduce (sprintf "%s, %s") –∫–ª—é—á–∏
    |> text |> List.singleton |> td []

let –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å = (*) 100. >> sprintf "%.0f" >> text >> List.singleton >> td []
let h = text >> List.singleton >> th []

let view =
    table [ attr.``class`` "table" ] [
        thead [] [ h "–°"; h "–ò–º—è"; h "–ü"; h "–°"; h "–ú"; h "–†"; h "–î"; h "‚àë" ]
        List.sortBy (fun –∏–≥—Ä–æ–∫ -> –∏–≥—Ä–æ–∫.–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å) —Ä–µ–π—Ç–∏–Ω–≥
        |> List.map (fun –∏–≥—Ä–æ–∫ ->
            tr [] [
                td [] [ text –∏–≥—Ä–æ–∫.–°–∏–º–≤–æ–ª ]
                td [
                    if –∏–≥—Ä–æ–∫.–†–∞–± then "is-black" else ""
                    |> attr.``class``
                ] [ Map.tryFind –∏–≥—Ä–æ–∫.–°–∏–º–≤–æ–ª –∏–≥—Ä–æ–∫–∏
                    |> Option.defaultValue ""
                    |> text
                ]
                td [] [ string –∏–≥—Ä–æ–∫.–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å |> text ]
                –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å
                –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω
                –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥
                –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
                –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å (
                    –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å
                    + –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω
                    + –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥
                    + –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
                )
                // –∫–ª—é—á–∏–í–Ø—á–µ–π–∫—É –∫–ª—é—á–∏
            ]
        )
        |> tbody []
        List.fold (fun (—Å, –º, —Ä, –¥) –∏–≥—Ä–æ–∫ ->
            —Å + –∏–≥—Ä–æ–∫.–°–ø–∞—Å–∏—Ç–µ–ª—å
            , –º + –∏–≥—Ä–æ–∫.–ú–∞—Å–æ–Ω
            , —Ä + –∏–≥—Ä–æ–∫.–†–µ–ø—Ç–∏–ª–æ–∏–¥
            , –¥ + –∏–≥—Ä–æ–∫.–î–µ–º–æ–Ω
        ) (0., 0., 0., 0.) —Ä–µ–π—Ç–∏–Ω–≥
        |> fun (—Å, –º, —Ä, –¥) -> tfoot [] [
            td [] []
            td [] []
            td [] []
            —Å / 100. |> –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
            –º / 100. |> –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
            —Ä / 100. |> –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
            –¥ / 100. |> –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
            td [] []
        ]
    ]
